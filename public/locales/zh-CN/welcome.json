{
  "title": "欢迎使用 BTFS",
  "configureApiPort": {
    "header": "你的 API 端口不是 5001 ？",
    "paragraph1": "<0>如果你的 BTFS 节配置了<1>自定义 API 地址</1>, 请设置在这里</0>"
  },
  "apiAddressForm": {
    "apiLabel": "API ADDRESS",
    "submitButton": "提交"
  },
  "connected": {
    "header": "连接到 BTFS",
    "paragraph1": "<0>现在，是时候了解你的节点。 前往 <1>文件页面</1> 管理和分享你的文件，或通过<5> IPLD 浏览器</5>了解节点托管哈希链数据 <3>Merkle Forest</3>。‭</0>",
    "paragraph2": "<0>你可以随时回到此地址来修改你连接的 BTFS 节点。</0>"
  },
  "notConnected": {
    "header": "您的 BTFS 守护程序是否正在运行？",
    "paragraph1": "<0>无法连接 API</0>",
    "paragraoh2": "<0>确认你<1>配置了你的 BTFS API </1>以允许跨域（CORS）请求，执行下面命令：</0>",
    "paragraph3": "<0>在终端中启动 BTFS 守护进程:</0>",
    "paragraph4": "<0>获取开始使用 BTFS 的更多信息你可以 <1>阅读此向导</1>.</0>"
  },
  "aboutIpfs": {
    "header": "BTFS是什么？",
    "paragraph1": "<0><0>BTFS是协议</0>，定义了基于哈希寻址内容文件系统，并结合了来自Kademlia、 BitTorrent、Git等的想法来协调内容传输。</0>",
    "paragraph2": "<0><0>BTFS是文件系统。</0>有文件夹、文件和基于FUSE的可挂载文件系统。</0>",
    "paragraph4": "<0><0>BTFS是p2p。</0>支持世界范围点对点文件传输，具有完全分散的架构，没有中心点故障。</0>",
    "paragraph5": "<0><0>BTFS是CDN。</0>在本地库中添加一个文件，立即对世界可用，并拥有对缓存友好的内容哈希地址和BitTorrent一样的带宽分发。</0>"
  }
}
